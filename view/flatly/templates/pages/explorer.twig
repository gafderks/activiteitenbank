{% extends "layout.twig" %}

{% block title %}{% trans "Explore" %}{% endblock title %}

{% block stylesheets %}
    <link href="{{ componentsUrl }}/datatables.net-bs/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="{{ componentsUrl }}/seiyria-bootstrap-slider/dist/css/bootstrap-slider.min.css" rel="stylesheet" />

    {{ parent() }}
{% endblock stylesheets %}

{% block content %}
<h1>{% trans "Explore" %}</h1>

<div class="row">

    <div class="col-md-3">
        {% block explorer_filter %}
            {% include "partials/explorer_filter.twig" %}
        {% endblock %}
    </div>

    <div class="col-md-9">

        <table id="activity-table" class="display">
            <thead>
                <tr>
                    {% for column in searchColumns %}
                        <th>{{ column.name|trans }}</th>
                    {% endfor %}
                </tr>
            </thead>

            <tfoot>
                <tr>
                    {% for column in searchColumns %}
                        <th>{{ column.name|trans }}</th>
                    {% endfor %}
                </tr>
            </tfoot>

            <tbody>
                {% set levels = {0: 'Unspecified',
                1: 'Very low',
                2: 'Low',
                3: 'Medium',
                4: 'High',
                5: 'Very high'} %}
                {% set activityArea = enum.activityArea %}
                {% set groupType = enum.groupType %}
                {% for activity in activities %}
                    <tr>
                        <td>
                            <a href="{{ urlFor('activity-view', {"id": activity.id, "slug": activity.slug}) }}">
                                {{ activity.name }}
                            </a>
                        </td>
                        {% set activityCategoriesNamed = [] %}
                        {% set activityCategories = [] %}
                        {% for category in activity.categories %}
                            {% set activityCategoriesNamed = activityCategoriesNamed|merge(category.name|e) %}
                            {% set activityCategories = activityCategories|merge(category.id) %}
                        {% endfor %}
                        <td data-order="{{ activityCategories.join(',') }}">
                            {{ activityCategoriesNamed|join(', ') }}
                        </td>
                        <td data-order="{{ activity.planning.totalDuration }}"
                            data-filter="{{ activity.planning.totalDuration }}">
                            {{ activity.planning.totalDuration|int2time|raw }}
                        </td>
                        <td data-order="{{ activity.budget.totalCost }}" data-filter="{{ activity.budget.totalCost }}">
                            {{ activity.budget.totalCost|float2euro|raw }}
                        </td>
                        <td data-order="{{ activity.difficulty.value }}" data-filter="{{ activity.difficulty.value }}">
                            {{ levels[activity.difficulty.value]|trans }}
                        </td>
                        <td data-order="{{ activity.guidance.value }}" data-filter="{{ activity.guidance.value }}">
                            {{ levels[activity.guidance.value]|trans }}
                        </td>
                        <td data-order="{{ activity.motivation.value }}" data-filter="{{ activity.motivation.value }}">
                            {{ levels[activity.motivation.value]|trans }}
                        </td>
                        <td data-filter="{{ activity.activityAreasRaw|join(',') }}">
                            {% if activityArea.ChallengingScoutingTechniques in activity.activityAreasRaw %}
                                <img src="{{ assetsUrl }}/img/activity-areas/challenging-scouting-techniques.png"
                                     class="badge-small" alt="{{ "Challenging Scouting Techniques"|trans }}"
                                     title="{{ "Challenging Scouting Techniques"|trans }}" />
                            {% endif %}
                            {% if activityArea.Expression in activity.activityAreasRaw %}
                                <img src="{{ assetsUrl }}/img/activity-areas/expression.png"
                                     class="badge-small" alt="{{ "Expression"|trans }}" title="{{ "Expression"|trans }}" />
                            {% endif %}
                            {% if activityArea.SportsAndGames in activity.activityAreasRaw %}
                                <img src="{{ assetsUrl }}/img/activity-areas/sports-and-games.png"
                                     class="badge-small" alt="{{ "Sports and Games"|trans }}"
                                     title="{{ "Sports and Games"|trans }}" />
                            {% endif %}
                            {% if activityArea.OutdoorLife in activity.activityAreasRaw %}
                                <img src="{{ assetsUrl }}/img/activity-areas/outdoor-life.png"
                                     class="badge-small" alt="{{ "Outdoor life"|trans }}" title="{{ "Outdoor life"|trans }}" />
                            {% endif %}
                            {% if activityArea.Identity in activity.activityAreasRaw %}
                                <img src="{{ assetsUrl }}/img/activity-areas/identity.png"
                                     class="badge-small" alt="{{ "Identity"|trans }}" title="{{ "Identity"|trans }}" />
                            {% endif %}
                            {% if activityArea.International in activity.activityAreasRaw %}
                                <img src="{{ assetsUrl }}/img/activity-areas/international.png"
                                     class="badge-small" alt="{{ "International"|trans }}" title="{{ "International"|trans }}" />
                            {% endif %}
                            {% if activityArea.Society in activity.activityAreasRaw %}
                                <img src="{{ assetsUrl }}/img/activity-areas/society.png"
                                     class="badge-small" alt="{{ "Society"|trans }}" title="{{ "Society"|trans }}" />
                            {% endif %}
                            {% if activityArea.SafeAndHealthy in activity.activityAreasRaw %}
                                <img src="{{ assetsUrl }}/img/activity-areas/safe-and-healthy.png"
                                     class="badge-small" alt="{{ "Safe and Healthy"|trans }}"
                                     title="{{ "Safe and Healthy"|trans }}" />
                            {% endif %}
                        </td>
                        <td data-filter="{{ activity.suitableGroupsRaw|join(',') }}">
                            {% if groupType.Bevers in activity.suitableGroupsRaw %}
                                <img src="{{ assetsUrl }}/img/scouting-groups/bevers.png"
                                     class="badge-small" alt="{{ "Bevers"|trans }}" title="{{ "Bevers"|trans }}" />
                            {% endif %}
                            {% if groupType.Welpen in activity.suitableGroupsRaw %}
                                <img src="{{ assetsUrl }}/img/scouting-groups/welpen.png"
                                     class="badge-small" alt="{{ "Welpen"|trans }}" title="{{ "Welpen"|trans }}" />
                            {% endif %}
                            {% if groupType.Scouts in activity.suitableGroupsRaw %}
                                <img src="{{ assetsUrl }}/img/scouting-groups/scouts.png"
                                     class="badge-small" alt="{{ "Scouts"|trans }}" title="{{ "Scouts"|trans }}" />
                            {% endif %}
                            {% if groupType.Explorers in activity.suitableGroupsRaw %}
                                <img src="{{ assetsUrl }}/img/scouting-groups/explorers.png"
                                     class="badge-small" alt="{{ "Explorers"|trans }}"
                                     title="{{ "Explorers"|trans }}" />
                            {% endif %}
                            {% if groupType.Roverscouts in activity.suitableGroupsRaw %}
                                <img src="{{ assetsUrl }}/img/scouting-groups/roverscouts.png"
                                     class="badge-small" alt="{{ "Roverscouts"|trans }}"
                                     title="{{ "Roverscouts"|trans }}" />
                            {% endif %}
                            {% if groupType.Plusscouts in activity.suitableGroupsRaw %}
                                <img src="{{ assetsUrl }}/img/scouting-groups/plusscouts.png"
                                     class="badge-small" alt="{{ "Plusscouts"|trans }}"
                                     title="{{ "Plusscouts"|trans }}" />
                            {% endif %}
                        </td>
                        <td>{{ activity.creator.name }}</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>

    </div>

</div>
{% endblock content %}

{% block javascripts %}
{{ parent() }}
<script type="text/javascript" src="{{ componentsUrl }}/datatables.net/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="{{ componentsUrl }}/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
<script type="text/javascript" src="{{ componentsUrl }}/datatables.net-buttons/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" src="{{ componentsUrl }}/datatables.net-buttons-bs/js/buttons.bootstrap.min.js"></script>
<script type="text/javascript" src="{{ componentsUrl }}/datatables.net-buttons/js/buttons.colVis.min.js"></script>
<script type="text/javascript" src="{{ componentsUrl }}/seiyria-bootstrap-slider/dist/bootstrap-slider.min.js"></script>

<script type="text/javascript">

    $(document).ready(function() {
        var activityTable = $('#activity-table').DataTable( {
            "dom": '<"colvis"B><"table-top">t<"table-bottom"lip>',
            "order": [[ 0, "asc" ]],
            "columnDefs" : [
                {% set key = 0 %}
                {% for column in searchColumns %}
                {
                    "targets": {{ key }},
                    "visible": {{ column.visible ? "true" : "false" }},
                    "searchable": {{ column.searchable ? "true" : "false" }},
                    "orderable": {{ column.orderable ? "true" : "false" }}
                    {% set key = key + 1 %}
                },
                {% endfor %}
            ],
            "pageLength": 25,
            "buttons": ['colvis'],
            "language": {
                "sEmptyTable":     "{{ "No data available in table"|trans }}",
                "sInfo":           "{{ "Showing _START_ to _END_ of _TOTAL_ entries"|trans }}",
                "sInfoEmpty":      "{{ "Showing 0 to 0 of 0 entries"|trans }}",
                "sInfoFiltered":   "{{ "(filtered from _MAX_ total entries)"|trans }}",
                "sInfoPostFix":    "",
                "sInfoThousands":  "{% trans %},{% notes %}thousands separator{% endtrans %}",
                "sLengthMenu":     "{{ "Show _MENU_ entries"|trans }}",
                "sLoadingRecords": "{{ "Loading..."|trans }}",
                "sProcessing":     "{{ "Processing..."|trans }}",
                "sSearch":         "{{ "Search"|trans }}:",
                "sZeroRecords":    "{{ "No matching records found"|trans }}",
                "oPaginate": {
                    "sFirst":    "{{ "First"|trans }}",
                    "sLast":     "{{ "Last"|trans }}",
                    "sNext":     "{{ "Next"|trans }}",
                    "sPrevious": "{{ "Previous"|trans }}"
                },
                "oAria": {
                    "sSortAscending":  ": {{ "activate to sort column ascending"|trans }}",
                    "sSortDescending": ": {{ "activate to sort column descending"|trans }}"
                },
                "buttons": {
                    "colvis": "{{ "Change columns"|trans }}"
                }
            }
        });

        $('#filter-term').keyup(function() {
            activityTable.draw();
        });

        $(".slider").change(function() {
            activityTable.draw();

        });

        $(".filter-title, .filter-bar-title").click(function() {
            $(this).parent().toggleClass("active");
        });

        $(".slider.level").slider({
            tooltip: "always",
            tooltip_split: true,
            formatter: function(value) {
                {% set levels = {0: 'Unspecified',
                1: 'Very low',
                2: 'Low',
                3: 'Medium',
                4: 'High',
                5: 'Very high'} %} {# //TODO remove necessity for this #}
                var levels = [
                    "{{ levels[0]|trans }}",
                    "{{ levels[1]|trans }}",
                    "{{ levels[2]|trans }}",
                    "{{ levels[3]|trans }}",
                    "{{ levels[4]|trans }}",
                    "{{ levels[5]|trans }}"
                ];
                if (Array.isArray(value)) {
                    return String(levels[value[0]] + " - " + levels[value[1]]);
                } else {
                    return levels[value];
                }

            }
        });

        $(".slider.time").slider({
            tooltip: "always",
            tooltip_split: true,
            formatter: function(value) {
                if (Array.isArray(value)) {
                    var hours1   = Math.floor(value[0] / 60);
                    var minutes1 = String("00" + (value[0] % 60)).slice(-2);
                    var time1 = String(hours1 + ":" + minutes1);
                    var hours2   = Math.floor(value[1] / 60);
                    var minutes2 = String("00" + (value[1] % 60)).slice(-2);
                    var time2 = String(hours2 + ":" + minutes2);
                    return String(time1 + " - " + time2);
                } else {
                    var hours   = Math.floor(value / 60);
                    var minutes = String("00" + (value % 60)).slice(-2);
                    return String(hours + ":" + minutes);
                }
            }
        });

        $(".slider.budget").slider({
            tooltip: "always",
            tooltip_split: true,
            formatter: function(value) {
                if (Array.isArray(value)) {
                    var euros1   = Math.floor(value[0]);
                    var budget1 = "€ " + euros1 + ".00";
                    var euros2   = Math.floor(value[1]);
                    var budget2 = "€ " + euros2 + ".00";
                    return String(budget1 + " - " + budget2);
                } else {
                    var euros = Math.floor(value);
                    return "€ " + euros + ".00";
                }
            }
        });

        /**
         *  Filtering method.
         *
         *  This method is called for every activity in the list.
         *  If this method returns false, the activity is hidden.
         *  If this method returns true, the activity is shown.
         */
        $.fn.dataTable.ext.search.push(
            function( settings, data, dataIndex ) {


//                var f_category = [];
//                $("[name=filter-category]:checked").each(function() {
//                    f_category.push($(this).data("filter-text"));
//                });
//                console.log(f_category);
//
                var name = data[0];
//                var category = data[1];
                var duration = data[2];
                var budget = data[3];
                var difficulty = data[4];
                var guidance = data[5];
                var motivation = data[6];
//                var state = data[7];
//                var activity_areas = data[8];
//                var suitable_groups = data[9];
//                var creator = data[10];


                /** Filter on search term */
                var filterTerm = $('#filter-term').val();
                if (filterTerm.length > 0) { // if nothing is entered, don't filter
                    var pattern = new RegExp(filterTerm, "i"); // case-insensitive
                    var one = false;
                    // look for at least one column that matches the regular expression
                    for (var i = 0; i < data.length; i++) {
                        if (pattern.test(data[i])) {
                            one = true; // column found
                        }
                    }
                    if (!one) {
                        return false; // regular expression was never matched
                    }
                }

                var filter;

                /** Filter on duration */
                filter = $("#filter-duration");
                var minDuration = filter.slider('getValue')[0];
                var maxDuration = filter.slider('getValue')[1];
                if (duration > maxDuration || duration < minDuration) {
                    return false;
                }

                /** Filter on budget */
                filter = $("#filter-budget");
                var minBudget = filter.slider('getValue')[0];
                var maxBudget = filter.slider('getValue')[1];
                if (budget > maxBudget || budget < minBudget) {
                    return false;
                }

                /** Filter on difficulty */
                filter = $("#filter-difficulty");
                var minDifficulty = filter.slider('getValue')[0];
                var maxDifficulty = filter.slider('getValue')[1];
                if (difficulty > maxDifficulty || difficulty < minDifficulty) {
                    return false;
                }

                /** Filter on guidance */
                filter = $("#filter-guidance");
                var minGuidance = filter.slider('getValue')[0];
                var maxGuidance = filter.slider('getValue')[1];
                if (guidance > maxGuidance || guidance < minGuidance) {
                    return false;
                }

                /** Filter on motivation */
                filter = $("#filter-motivation");
                var minMotivation = filter.slider('getValue')[0];
                var maxMotivation = filter.slider('getValue')[1];
                if (motivation > maxMotivation || motivation < minMotivation) {
                    return false;
                }


                // category filter
//                if (f_category.length > 0) {
//                    if (f_category.indexOf(category)==-1) {
//                        return false;
//                    }
//                }
//
                return true;
            }
        );

    });




</script>
{% endblock javascripts %}